---
- name: Installation
  hosts: all
  become: yes

  vars:
    documentRoot: /var/www
    apacheConf: /etc/apache2
    phpVersion: 7.4
    postgresVersion: 12
    postgresConf: /etc/postgresql/{{ postgresVersion }}/main
    provisioning: /var/www/provisioning
    db_user: vagrant
    db_name: vagrant
    db_password: vagrant

  tasks:
  - name: Updating (Grab a coffee and wait)
    apt:
      update_cache: yes
      upgrade: full

  - name: Installation Apache/PHP/PostgreSQL
    apt:
      name: 
        - apache2
        - php{{ phpVersion }}
        - php{{ phpVersion }}-xml
        - php{{ phpVersion }}-json
        - php{{ phpVersion }}-pgsql
        - php{{ phpVersion }}-mbstring
        - libapache2-mod-php{{ phpVersion }}
        - phpunit
        - postgresql-{{ postgresVersion }}
        - postgresql-contrib-{{ postgresVersion }}
        - python3-psycopg2
        - acl
      state: latest

  - name: Create the database specified in vars
    become: true
    become_user: postgres
    postgresql_db: name={{ db_name }}
      template='template0'
      state=present

  - name: Ensure user has access to the new database
    become: true
    become_user: postgres
    postgresql_user: db={{ db_name }}
      name={{ db_user }}
      password={{ db_password }}
      priv=ALL
      state=present

  - name: Ensure user does not have unnecessary permissions
    become: true
    become_user: postgres
    postgresql_user: name={{ db_user }}
      role_attr_flags=NOSUPERUSER,NOCREATEDB
      state=present

  - name: Ensure we have access from the new user
    become: yes
    become_user: postgres
    postgresql_privs:
      db: "{{ db_name }}"
      role: "{{ db_user }}"
      objs: ALL_IN_SCHEMA
      privs: SELECT,INSERT,UPDATE,DELETE

  - name: Adding access from inside the box
    become: yes
    become_user: postgres
    postgresql_pg_hba:
      dest: "{{ postgresConf }}/pg_hba.conf"
      contype: local
      users: "{{ db_user }}"
      databases: "{{ db_name }}"
      method: md5
      create: true
      state: present

  - name: Adding access from outside the box
    become: yes
    become_user: postgres
    postgresql_pg_hba:
      dest: "{{ postgresConf }}/pg_hba.conf"
      contype: host
      users: "{{ db_user }}"
      databases: "{{ db_name }}"
      source: 0.0.0.0/0
      method: md5
      create: true
      state: present
      
  - name: Configure set listen_addresses.
    become: yes
    lineinfile: dest={{ postgresConf }}/postgresql.conf
      regexp="listen_addresses =" line="listen_addresses = '*'" state=present

  - name: Restarting PostgreSQL
    service:
      name: postgresql
      state: restarted

  - name: Run queries from SQL script
    become: yes
    become_user: postgres
    postgresql_query:
      login_user: "{{ db_user }}"
      login_password: "{{ db_password }}"
      as_single_query: yes
      db: "{{ db_name }}"
      encoding: UTF-8
      path_to_script: "{{ provisioning }}/db.sql"

  - name: Stopping Apache
    service:
      name: apache2
      state: stopped

  - name: Waiting Stopping Apache (wait 5 seconds)
    pause:
      seconds: 5

  - name: Copy Apache config
    template:
      src: "{{ provisioning }}/templates/apache2.conf.j2"
      dest: "{{ apacheConf }}/apache2.conf"

  - name: Define default virtualhost
    template:
      src: "{{ provisioning }}/templates/000-default.conf.j2"
      dest: "{{ apacheConf }}/sites-available/000-default.conf"

  - name: Activate rewrite module
    community.general.apache2_module:
      state: present
      name: rewrite

  - name: Deleting "{{ documentRoot }}/html"
    shell: rm -rf "{{ documentRoot }}/html"

  - name: Starting Apache
    service:
      name: apache2
      state: restarted
